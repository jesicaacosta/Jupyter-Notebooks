{"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"1H51250NmnN4","executionInfo":{"status":"ok","timestamp":1730328510724,"user_tz":180,"elapsed":2634,"user":{"displayName":"","userId":""}},"outputId":"9dada98f-8252-4e66-cfc9-1851156524df","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n"],"metadata":{"id":"qwVoBNqIn1jQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_excel(\"/content/drive/MyDrive/CURSO IA/Analisis Exploratorio y visualizaciON/ventas_supermercado.xlsx\")"],"metadata":{"id":"UCt5aHd5n7Tg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head(15)"],"metadata":{"id":"4IESPqJooIUt","executionInfo":{"status":"ok","timestamp":1730330336373,"user_tz":180,"elapsed":336,"user":{"displayName":"","userId":""}},"outputId":"b7461808-bf7d-415b-ea7a-4182172ae122","colab":{"base_uri":"https://localhost:8080/","height":519}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Fecha Producto  Cantidad_Vendida  Precio_Unitario Dia_Semana  \\\n","0  2024-01-01   Frutas                23             1.50      Lunes   \n","1  2024-01-02   Frutas                25             1.60     Martes   \n","2  2024-01-03   Frutas                30             1.55  Miércoles   \n","3  2024-01-04   Frutas                55             1.70     Jueves   \n","4  2024-01-05   Frutas                65             1.80    Viernes   \n","5  2024-01-06   Frutas                78             1.75     Sábado   \n","6  2024-01-07   Frutas                95             1.85    Domingo   \n","7  2024-01-08   Frutas                70             1.90      Lunes   \n","8  2024-01-09   Frutas                65             1.95     Martes   \n","9  2024-01-10   Frutas                75             2.00  Miércoles   \n","10 2024-01-11   Frutas                80             2.10     Jueves   \n","11 2024-01-12   Frutas                85             2.15    Viernes   \n","12 2024-01-13   Frutas                90             2.20     Sábado   \n","13 2024-01-14   Frutas                95             2.25    Domingo   \n","14 2024-01-15   Frutas                55             2.30      Lunes   \n","\n","   Dia_semana  \n","0       Lunes  \n","1      Martes  \n","2   Miércoles  \n","3      Jueves  \n","4     Viernes  \n","5      Sábado  \n","6     Domingo  \n","7       Lunes  \n","8      Martes  \n","9   Miércoles  \n","10     Jueves  \n","11    Viernes  \n","12     Sábado  \n","13    Domingo  \n","14      Lunes  "],"text/html":["\n","  <div id=\"df-3b9c84ac-b61f-4305-adb5-2904653db966\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Fecha</th>\n","      <th>Producto</th>\n","      <th>Cantidad_Vendida</th>\n","      <th>Precio_Unitario</th>\n","      <th>Dia_Semana</th>\n","      <th>Dia_semana</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-01-01</td>\n","      <td>Frutas</td>\n","      <td>23</td>\n","      <td>1.50</td>\n","      <td>Lunes</td>\n","      <td>Lunes</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-01-02</td>\n","      <td>Frutas</td>\n","      <td>25</td>\n","      <td>1.60</td>\n","      <td>Martes</td>\n","      <td>Martes</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-01-03</td>\n","      <td>Frutas</td>\n","      <td>30</td>\n","      <td>1.55</td>\n","      <td>Miércoles</td>\n","      <td>Miércoles</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-01-04</td>\n","      <td>Frutas</td>\n","      <td>55</td>\n","      <td>1.70</td>\n","      <td>Jueves</td>\n","      <td>Jueves</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-01-05</td>\n","      <td>Frutas</td>\n","      <td>65</td>\n","      <td>1.80</td>\n","      <td>Viernes</td>\n","      <td>Viernes</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2024-01-06</td>\n","      <td>Frutas</td>\n","      <td>78</td>\n","      <td>1.75</td>\n","      <td>Sábado</td>\n","      <td>Sábado</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2024-01-07</td>\n","      <td>Frutas</td>\n","      <td>95</td>\n","      <td>1.85</td>\n","      <td>Domingo</td>\n","      <td>Domingo</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2024-01-08</td>\n","      <td>Frutas</td>\n","      <td>70</td>\n","      <td>1.90</td>\n","      <td>Lunes</td>\n","      <td>Lunes</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2024-01-09</td>\n","      <td>Frutas</td>\n","      <td>65</td>\n","      <td>1.95</td>\n","      <td>Martes</td>\n","      <td>Martes</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2024-01-10</td>\n","      <td>Frutas</td>\n","      <td>75</td>\n","      <td>2.00</td>\n","      <td>Miércoles</td>\n","      <td>Miércoles</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2024-01-11</td>\n","      <td>Frutas</td>\n","      <td>80</td>\n","      <td>2.10</td>\n","      <td>Jueves</td>\n","      <td>Jueves</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2024-01-12</td>\n","      <td>Frutas</td>\n","      <td>85</td>\n","      <td>2.15</td>\n","      <td>Viernes</td>\n","      <td>Viernes</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2024-01-13</td>\n","      <td>Frutas</td>\n","      <td>90</td>\n","      <td>2.20</td>\n","      <td>Sábado</td>\n","      <td>Sábado</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2024-01-14</td>\n","      <td>Frutas</td>\n","      <td>95</td>\n","      <td>2.25</td>\n","      <td>Domingo</td>\n","      <td>Domingo</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>2024-01-15</td>\n","      <td>Frutas</td>\n","      <td>55</td>\n","      <td>2.30</td>\n","      <td>Lunes</td>\n","      <td>Lunes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b9c84ac-b61f-4305-adb5-2904653db966')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3b9c84ac-b61f-4305-adb5-2904653db966 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3b9c84ac-b61f-4305-adb5-2904653db966');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7c608f00-7bbe-40f1-a0ea-934b132576e5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c608f00-7bbe-40f1-a0ea-934b132576e5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7c608f00-7bbe-40f1-a0ea-934b132576e5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 60,\n  \"fields\": [\n    {\n      \"column\": \"Fecha\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-01-01 00:00:00\",\n        \"max\": \"2024-02-29 00:00:00\",\n        \"num_unique_values\": 60,\n        \"samples\": [\n          \"2024-01-01 00:00:00\",\n          \"2024-01-06 00:00:00\",\n          \"2024-02-06 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Producto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Verduras\",\n          \"Cereales\",\n          \"Frutas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cantidad_Vendida\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 23,\n        \"max\": 95,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          23,\n          81,\n          50\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Precio_Unitario\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.25168359654209005,\n        \"min\": 1.5,\n        \"max\": 2.3,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          2.0,\n          2.15,\n          1.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dia_Semana\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Lunes\",\n          \"Martes\",\n          \"S\\u00e1bado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dia_semana\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Lunes\",\n          \"Martes\",\n          \"S\\u00e1bado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["dias_ordenados = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo']\n"],"metadata":{"id":"NQfp8PVToUUl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['Dia_semana'] = pd.Categorical(df['Dia_Semana'], categories=dias_ordenados, ordered=True)"],"metadata":{"id":"MV93oDVhowBl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_c = df.groupby('Dia_Semana')['Precio_Unitario'].count()\n","df_c"],"metadata":{"id":"ZQHFjHtsuhk2","executionInfo":{"status":"ok","timestamp":1730330597136,"user_tz":180,"elapsed":483,"user":{"displayName":"","userId":""}},"outputId":"0c527258-6645-4efe-cdc0-31dd9447fb17","colab":{"base_uri":"https://localhost:8080/","height":335}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Dia_Semana\n","Domingo      8\n","Jueves       9\n","Lunes        9\n","Martes       9\n","Miércoles    9\n","Sábado       8\n","Viernes      8\n","Name: Precio_Unitario, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Precio_Unitario</th>\n","    </tr>\n","    <tr>\n","      <th>Dia_Semana</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Domingo</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Jueves</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Lunes</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Martes</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Miércoles</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Sábado</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Viernes</th>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["ventas_por_dias = df.groupby('Dia_Semana')['Cantidad_Vendida'].sum()\n","ventas_por_dias"],"metadata":{"id":"GPBAQ701ptB5","executionInfo":{"status":"ok","timestamp":1730330623611,"user_tz":180,"elapsed":390,"user":{"displayName":"","userId":""}},"outputId":"79ecd062-84c9-4e70-c535-9e7e17e78b9e","colab":{"base_uri":"https://localhost:8080/","height":335}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Dia_Semana\n","Domingo      646\n","Jueves       534\n","Lunes        538\n","Martes       539\n","Miércoles    533\n","Sábado       660\n","Viernes      580\n","Name: Cantidad_Vendida, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cantidad_Vendida</th>\n","    </tr>\n","    <tr>\n","      <th>Dia_Semana</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Domingo</th>\n","      <td>646</td>\n","    </tr>\n","    <tr>\n","      <th>Jueves</th>\n","      <td>534</td>\n","    </tr>\n","    <tr>\n","      <th>Lunes</th>\n","      <td>538</td>\n","    </tr>\n","    <tr>\n","      <th>Martes</th>\n","      <td>539</td>\n","    </tr>\n","    <tr>\n","      <th>Miércoles</th>\n","      <td>533</td>\n","    </tr>\n","    <tr>\n","      <th>Sábado</th>\n","      <td>660</td>\n","    </tr>\n","    <tr>\n","      <th>Viernes</th>\n","      <td>580</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["ventas_por_dias.plot(kind='bar' , color = 'red')\n","plt.xlabel('Día de la semana') #eje x\n","plt.ylabel('Cantidad vendida') #eje y\n","plt.title('Ventas por día de la semana') #titulo\n","plt.show() # es el comando que realmente toma esa gráfica y la renderiza visualmente en tu pantalla"],"metadata":{"id":"nR40ij3SqA-F","executionInfo":{"status":"ok","timestamp":1730329372451,"user_tz":180,"elapsed":432,"user":{"displayName":"","userId":""}},"outputId":"2c55709a-b7a7-4b1d-9454-b200ea97eb88","colab":{"base_uri":"https://localhost:8080/","height":524}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAjsAAAH7CAYAAAAq1l5yAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABgGklEQVR4nO3deVxN+f8H8Ne9bdoXVCKJQpFBDFkHjZBtGPvYxjJD1iwzhrEPxox9HWMUZjAYxjDIvmeQJRpr08JQGakUSvX5/eHX+c6duikt53Z6PR+P+3i4n3PuOe/7Lt3XPatKCCFAREREpFBquQsgIiIiKkoMO0RERKRoDDtERESkaAw7REREpGgMO0RERKRoDDtERESkaAw7REREpGgMO0RERKRoDDtEVOIIIbBo0SL8/PPPcpdCRCUAww4R6awTJ05ApVLhxIkTGuPff/89ZsyYgTp16hTZut977z289957hba8QYMGoUqVKoW2PCLKO4Ydov/XuXNnmJiY4NmzZ1rn6devHwwNDfHkyZNCX//+/fsxc+bMQl+u0vz999+YPHkyvvvuO7i5ucldDhGVAAw7RP+vX79+ePHiBXbv3p3j9OfPn2PPnj1o164dypYtW+jr379/P2bNmlXoy1WakSNHolevXujXr5/cpRBRCcGwQ/T/OnfuDHNzc2zZsiXH6Xv27EFKSgo/ZN9SSkpKoSxnz549+O677wplWURUOjDsEP0/Y2NjdOvWDUePHkVcXFy26Vu2bIG5uTk6d+4MAEhISMC4cePg6OgIIyMjuLi44Ouvv0ZmZqb0msjISKhUKnz77bdYt24dqlWrBiMjIzRs2BAXL16U5hs0aBBWrVoFAFCpVNIjy7fffosmTZqgbNmyMDY2hqenJ3bu3JmtxsOHD6NZs2awsrKCmZkZatSogS+++OKN712lUmHUqFH46aefUKNGDZQpUwaenp44depUtnmvXLmC9u3bw8LCAmZmZmjTpg3Onz+vMU9gYCBUKhVOnjyJkSNHwtbWFpUqVcq1hgcPHqBr164wNTWFra0txo8fj9TU1Gzz5XTsS177o03Wz8bY2BjvvvsuTp8+neN8qampmDFjBlxcXGBkZARHR0dMnjw5xzrzoiB13717F927d4e9vT3KlCmDSpUqoXfv3khMTNSY78cff4SnpyeMjY1hY2OD3r174/79+xrzvPfee6hduzZCQ0PRsmVLmJiYwMXFRarl5MmTaNSoEYyNjVGjRg0cOXJE4/VRUVEYOXIkatSoAWNjY5QtWxY9evRAZGSkxnxZvxdnz56Fv78/ypcvD1NTU3zwwQd4/Pixxrx79uyBr68vHBwcYGRkhGrVqmHOnDnIyMjIU3+INAgikhw6dEgAECtWrNAYf/LkiTAwMBADBgwQQgiRkpIi6tSpI8qWLSu++OILsXbtWjFgwAChUqnE2LFjpddFREQIAKJevXrCxcVFfP3112LhwoWiXLlyolKlSiItLU0IIcS5c+fE+++/LwCIzZs3S48slSpVEiNHjhQrV64UixcvFu+++64AIPbt2yfNc+PGDWFoaCgaNGggli1bJtauXSsmTpwoWrRo8cb3DUDUrl1blCtXTsyePVt8/fXXwsnJSRgbG4vr169rrMPU1FRUqFBBzJkzRyxYsEA4OzsLIyMjcf78eWm+gIAAAUC4u7uLli1bihUrVogFCxZoXf/z589F9erVRZkyZcTkyZPF0qVLhaenp6hTp44AII4fPy7NO3DgQOHk5KTx+rz0R5v169cLAKJJkyZi+fLlYty4ccLKykpUrVpVtGzZUpovIyNDtG3bVpiYmIhx48aJ7777TowaNUro6+uLLl26vHE9hVl3amqqcHZ2Fg4ODmLu3Lli/fr1YtasWaJhw4YiMjJSmm/u3LlCpVKJXr16idWrV4tZs2aJcuXKiSpVqoinT59K87Vs2VI4ODgIR0dHMWnSJLFixQrh7u4u9PT0xLZt24S9vb2YOXOmWLp0qahYsaKwtLQUSUlJ0ut37Ngh3nnnHTF9+nSxbt068cUXXwhra2vh5OQkUlJSpPmyfi/q1asnWrduLVasWCEmTJgg9PT0RM+ePTXeY9euXUXPnj3FN998I9asWSN69OghAIiJEye+sddE/8WwQ/Qv6enpokKFCsLLy0tjfO3atQKACAoKEkIIMWfOHGFqairu3LmjMd/nn38u9PT0RHR0tBDif2GnbNmyIj4+Xppvz549AoDYu3evNObn5ye0ff94/vy5xvO0tDRRu3Zt0bp1a2lsyZIlAoB4/Phxvt83AAFAXLp0SRqLiooSZcqUER988IE01rVrV2FoaCjCw8OlsYcPHwpzc3ONUJX1odasWTORnp7+xvUvXbpUABDbt2+XxlJSUoSLi0uewk5e+pOTtLQ0YWtrK+rWrStSU1Ol8XXr1gkAGmFn8+bNQq1Wi9OnT2ssI+t34+zZs7muqzDrvnLligAgduzYoXWeyMhIoaenJ7766iuN8evXrwt9fX2N8ZYtWwoAYsuWLdLYrVu3BAChVqs1gmxQUJAAIAICArS+DyGECA4OFgDEpk2bpLGs3wtvb2+RmZkpjY8fP17o6emJhISEXJf5ySefCBMTE/Hy5Uut75soJ9yNRfQvenp66N27N4KDgzU2wW/ZsgV2dnZo06YNAGDHjh1o3rw5rK2t8c8//0gPb29vZGRkZNv906tXL1hbW0vPmzdvDgD466+/8lSXsbGx9O+nT58iMTERzZs3x+XLl6VxKysrAK83//97V1peeXl5wdPTU3peuXJldOnSBUFBQcjIyEBGRgYOHTqErl27omrVqtJ8FSpUQN++fXHmzBkkJSVpLHPYsGHQ09N747r379+PChUq4MMPP5TGTExMMHz48DzVnpf+5OTSpUuIi4vDp59+CkNDQ2l80KBBsLS01Jh3x44dcHNzQ82aNTV+5q1btwYAHD9+PE+1FkbdWbUFBQXh+fPnOc6za9cuZGZmomfPnhr12tvbw9XVNVu9ZmZm6N27t/S8Ro0asLKygpubGxo1aiSNZ/3737+7/34fr169wpMnT+Di4gIrK6sc38vw4cM1dtM2b94cGRkZiIqKynGZz549wz///IPmzZvj+fPnuHXrVq79Ifovhh2i/8g6ADnrQOUHDx7g9OnT6N27t/TBfffuXRw8eBDly5fXeHh7ewNAtmN+KleurPE8K/g8ffo0TzXt27cPjRs3RpkyZWBjY4Py5ctjzZo1Gsdn9OrVC02bNsXQoUNhZ2eH3r17Y/v27XkOPq6urtnGqlevjufPn+Px48d4/Pgxnj9/jho1amSbz83NDZmZmdmOBXF2ds7TuqOiouDi4qLxAQggx3XlJC/90bZeIPt7NzAw0Ah0wOufeVhYWLafefXq1QFk/5kXZd3Ozs7w9/fH+vXrUa5cOfj4+GDVqlUar7t79y6EEHB1dc1W882bN7PVW6lSpWz9t7S0hKOjY7YxQPN398WLF5g+fbp0/Fq5cuVQvnx5JCQk5Phe8vL/ISwsDB988AEsLS1hYWGB8uXL46OPPgKAN/aH6L/05S6ASNd4enqiZs2a2Lp1K7744gts3boVQgiNs7AyMzPx/vvvY/LkyTkuI+sDMIu2rRtCiDfWc/r0aXTu3BktWrTA6tWrUaFCBRgYGCAgIEDjzDFjY2OcOnUKx48fx++//46DBw/i559/RuvWrXHo0KE8bWEpbP/+dl5U8tqfgsrMzISHhwcWL16c4/T/hoI3KWjdixYtwqBBg7Bnzx4cOnQIY8aMwfz583H+/HlUqlQJmZmZUKlUOHDgQI4/ezMzM43n2n4/8vK7O3r0aAQEBGDcuHHw8vKCpaUlVCoVevfunWPYftMyExIS0LJlS1hYWGD27NmoVq0aypQpg8uXL+Ozzz57qy2XVLox7BDloF+/fvjyyy8RGhqKLVu2wNXVFQ0bNpSmV6tWDcnJydKWnMLw32/VWX755ReUKVMGQUFBMDIyksYDAgKyzatWq9GmTRu0adMGixcvxrx58zB16lQcP378jbXevXs329idO3dgYmKC8uXLA3i9a+n27dvZ5rt16xbUanW+P/CzODk54caNGxBCaPQhp3X9V376k9N6gdfvPWt3FPB6V0xERATeeecdaaxatWq4du0a2rRpo/VnlR8FqTuLh4cHPDw8MG3aNJw7dw5NmzbF2rVrMXfuXFSrVg1CCDg7O2cL34Vt586dGDhwIBYtWiSNvXz5EgkJCW+1vBMnTuDJkyfYtWsXWrRoIY1HREQUtFQqpbgbiygHWVtxpk+fjqtXr2a7tk7Pnj0RHByMoKCgbK9NSEhAenp6vtdpamoqvf7f9PT0oFKpNE65jYyMxK+//qoxX3x8fLZl1q1bFwDydGp0cHCwxvEV9+/fx549e9C2bVvo6elBT08Pbdu2xZ49ezSOZ4qNjcWWLVvQrFkzWFhYvHE9OenQoQMePnyocdr18+fPsW7duje+Nq/9yUmDBg1Qvnx5rF27FmlpadJ4YGBgtp9Dz5498ffff+P777/PtpwXL17k+zpCBak7KSkp2++Yh4cH1Gq19LPu1q0b9PT0MGvWrGxbEIUQhXoVcD09vWzrWLFixVufJp615effy0xLS8Pq1avfvkgq1bhlhygHzs7OaNKkCfbs2QMA2cLOpEmT8Ntvv6Fjx44YNGgQPD09kZKSguvXr2Pnzp2IjIxEuXLl8rXOrIODx4wZAx8fH+lgaV9fXyxevBjt2rVD3759ERcXh1WrVsHFxQWhoaHS62fPno1Tp07B19cXTk5OiIuLw+rVq1GpUiU0a9bsjeuvXbs2fHx8MGbMGBgZGUkfLP++qvPcuXOla/mMHDkS+vr6+O6775CamoqFCxfm6/3+27Bhw7By5UoMGDAAISEhqFChAjZv3gwTE5M3vjav/cmJgYEB5s6di08++QStW7dGr169EBERgYCAgGzH7PTv3x/bt2/Hp59+iuPHj6Np06bIyMjArVu3sH37dgQFBaFBgwZ5fs8FqfvYsWMYNWoUevTogerVqyM9PR2bN2+Gnp4eunfvDuD1lqi5c+diypQpiIyMRNeuXWFubo6IiAjs3r0bw4cPx8SJE/Ncb246duyIzZs3w9LSEu7u7ggODsaRI0fe+krjTZo0gbW1NQYOHIgxY8ZApVJh8+bNedrtS5QjeU4CI9J9q1atEgDEu+++m+P0Z8+eiSlTpggXFxdhaGgoypUrJ5o0aSK+/fZb6fo5Waeef/PNN9leD0DMmDFDep6eni5Gjx4typcvL1QqlcZp6D/88INwdXUVRkZGombNmiIgIEDMmDFDY56jR4+KLl26CAcHB2FoaCgcHBxEnz59sp0enxMAws/PT/z444/SeurVq6dxyneWy5cvCx8fH2FmZiZMTExEq1atxLlz5zTmyTrF+OLFi29cd5aoqCjRuXNnYWJiIsqVKyfGjh0rDh48mKdTz/PSn9ysXr1aul5QgwYNxKlTp0TLli01Tj0X4vWp4V9//bWoVauWMDIyEtbW1sLT01PMmjVLJCYm5rqOwqz7r7/+Eh9//LGoVq2aKFOmjLCxsRGtWrUSR44cyTbvL7/8Ipo1ayZMTU2FqampqFmzpvDz8xO3b9+W5mnZsqWoVatWttc6OTkJX1/fbONZvy9Znj59KgYPHizKlSsnzMzMhI+Pj7h165ZwcnISAwcOlObT9ntx/PjxbD/ns2fPisaNGwtjY2Ph4OAgJk+eLJ32ntPvJVFuVEIwKhOVdiqVCn5+fli5cqXcpRARFToes0NERESKxrBDREREisawQ0RERIrGs7GIiGe5EJGiccsOERERKRrDDhERESkaww4REREpGo/Zwesb/D18+BDm5uaFcs8bIiIiKnpCCDx79gwODg5Qq7Vvv2HYAfDw4cO3voEhERERyev+/fuoVKmS1ukMOwDMzc0BvG7W297IkIiIiIpXUlISHB0dpc9xbRh2AGnXlYWFBcMOERFRCfOmQ1B4gDIREREpGsMOERERKRrDDhERESkaww4REREpGsMOERERKRrDDhERESkaww4REREpGsMOERERKRrDDhERESkaww4REREpGsMOERERKRrDDhERESkaww4REREpGsMOERERKZq+3AUQEREVKpVK7gr+Rwi5KyBwyw4REREpHMMOERERKRrDDhERESkaww4REREpGsMOERERKRrDDhERESkaww4REREpGq+zU5h06doOAK/vQEREBG7ZISIiIoVj2CEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkWTPez8/fff+Oijj1C2bFkYGxvDw8MDly5dkqYLITB9+nRUqFABxsbG8Pb2xt27dzWWER8fj379+sHCwgJWVlYYMmQIkpOTi/utEBERkQ6SNew8ffoUTZs2hYGBAQ4cOIA///wTixYtgrW1tTTPwoULsXz5cqxduxZ//PEHTE1N4ePjg5cvX0rz9OvXD2FhYTh8+DD27duHU6dOYfjw4XK8JSIiItIxKiGEkGvln3/+Oc6ePYvTp0/nOF0IAQcHB0yYMAETJ04EACQmJsLOzg6BgYHo3bs3bt68CXd3d1y8eBENGjQAABw8eBAdOnTAgwcP4ODg8MY6kpKSYGlpicTERFhYWLz9G1Kp3v61RUG+Hy0RkXx06W8x/w4Xqbx+fsu6Zee3335DgwYN0KNHD9ja2qJevXr4/vvvpekRERGIiYmBt7e3NGZpaYlGjRohODgYABAcHAwrKysp6ACAt7c31Go1/vjjjxzXm5qaiqSkJI0HERERKZOsYeevv/7CmjVr4OrqiqCgIIwYMQJjxozBxo0bAQAxMTEAADs7O43X2dnZSdNiYmJga2urMV1fXx82NjbSPP81f/58WFpaSg9HR8fCfmtERESkI2QNO5mZmahfvz7mzZuHevXqYfjw4Rg2bBjWrl1bpOudMmUKEhMTpcf9+/eLdH1EREQkH1nDToUKFeDu7q4x5ubmhujoaACAvb09ACA2NlZjntjYWGmavb094uLiNKanp6cjPj5emue/jIyMYGFhofEgIiIiZZI17DRt2hS3b9/WGLtz5w6cnJwAAM7OzrC3t8fRo0el6UlJSfjjjz/g5eUFAPDy8kJCQgJCQkKkeY4dO4bMzEw0atSoGN4FERER6TJ9OVc+fvx4NGnSBPPmzUPPnj1x4cIFrFu3DuvWrQMAqFQqjBs3DnPnzoWrqyucnZ3x5ZdfwsHBAV27dgXwektQu3btpN1fr169wqhRo9C7d+88nYlFREREyibrqecAsG/fPkyZMgV3796Fs7Mz/P39MWzYMGm6EAIzZszAunXrkJCQgGbNmmH16tWoXr26NE98fDxGjRqFvXv3Qq1Wo3v37li+fDnMzMzyVANPPSciUhBd+lvMv8NFKq+f37KHHV3AsENEpCC69LeYf4eLVIm4zg4RERFRUWPYISIiIkVj2CEiIiJFY9ghIiIiRZP11HMiIiIqRqX04G1u2SEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkVj2CEiIiJFY9ghIiIiRWPYISIiIkXTl7sAolJPpZK7Ak1CyF3B/+hSb3SpL0SUL9yyQ0RERIrGLTtUPHTpGzrAb+lERKUIww4RUUmkS18g+OWBdBx3YxEREZGiMewQERGRojHsEBERkaIx7BAREZGiMewQERGRojHsEBERkaIx7BAREZGiMewQERGRojHsEBERkaIx7BAREZGiMewQERGRojHsEBERkaLJGnZmzpwJlUql8ahZs6Y0/eXLl/Dz80PZsmVhZmaG7t27IzY2VmMZ0dHR8PX1hYmJCWxtbTFp0iSkp6cX91shIiIiHSX7Xc9r1aqFI0eOSM/19f9X0vjx4/H7779jx44dsLS0xKhRo9CtWzecPXsWAJCRkQFfX1/Y29vj3LlzePToEQYMGAADAwPMmzev2N8LERER6R7Zw46+vj7s7e2zjScmJuKHH37Ali1b0Lp1awBAQEAA3NzccP78eTRu3BiHDh3Cn3/+iSNHjsDOzg5169bFnDlz8Nlnn2HmzJkwNDQs7rdDREREOkb2Y3bu3r0LBwcHVK1aFf369UN0dDQAICQkBK9evYK3t7c0b82aNVG5cmUEBwcDAIKDg+Hh4QE7OztpHh8fHyQlJSEsLKx43wgRERHpJFm37DRq1AiBgYGoUaMGHj16hFmzZqF58+a4ceMGYmJiYGhoCCsrK43X2NnZISYmBgAQExOjEXSypmdN0yY1NRWpqanS86SkpEJ6R0RERKRrZA077du3l/5dp04dNGrUCE5OTti+fTuMjY2LbL3z58/HrFmzimz5REREpDtk3431b1ZWVqhevTru3bsHe3t7pKWlISEhQWOe2NhY6Rgfe3v7bGdnZT3P6TigLFOmTEFiYqL0uH//fuG+ESIiItIZOhV2kpOTER4ejgoVKsDT0xMGBgY4evSoNP327duIjo6Gl5cXAMDLywvXr19HXFycNM/hw4dhYWEBd3d3resxMjKChYWFxoOIiIiUSdbdWBMnTkSnTp3g5OSEhw8fYsaMGdDT00OfPn1gaWmJIUOGwN/fHzY2NrCwsMDo0aPh5eWFxo0bAwDatm0Ld3d39O/fHwsXLkRMTAymTZsGPz8/GBkZyfnWiIiISEfIGnYePHiAPn364MmTJyhfvjyaNWuG8+fPo3z58gCAJUuWQK1Wo3v37khNTYWPjw9Wr14tvV5PTw/79u3DiBEj4OXlBVNTUwwcOBCzZ8+W6y0RERGRjlEJIYTcRcgtKSkJlpaWSExMLNguLZWq8IoqDLr0o2VvtGNvtNOl3uhSXwD2JjfsjXYK601eP7916pgdIiIiosLGsENERESKxrBDREREisawQ0RERIrGsENERESKxrBDREREisawQ0RERIrGsENERESKxrBDREREisawQ0RERIrGsENERESKxrBDREREisawQ0RERIrGsENERESKxrBDREREisawQ0RERIqm/zYvunTpErZv347o6GikpaVpTNu1a1ehFEZERERUGPK9ZWfbtm1o0qQJbt68id27d+PVq1cICwvDsWPHYGlpWRQ1EhEREb21fIedefPmYcmSJdi7dy8MDQ2xbNky3Lp1Cz179kTlypWLokYiIiKit5bvsBMeHg5fX18AgKGhIVJSUqBSqTB+/HisW7eu0AskIiIiKoh8hx1ra2s8e/YMAFCxYkXcuHEDAJCQkIDnz58XbnVEREREBZTvA5RbtGiBw4cPw8PDAz169MDYsWNx7NgxHD58GG3atCmKGomIiIjeWr7DzsqVK/Hy5UsAwNSpU2FgYIBz586he/fumDZtWqEXSERERFQQKiGEkLsI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s2fP4uLFi9Luqc8++wznzp3DqFGjpK1Me/bsyXaAcn65urri8OHDOHfuHG7evIlPPvkEsbGx+VqGi4sLXr16hRUrVuCvv/7C5s2bsXbt2gLVRaRkDDtEpdTBgwdRoUIFVKlSBe3atcPx48exfPly7NmzB3p6ejm+pnPnzhg/fjxGjRqFunXr4ty5c/jyyy9zXY+ZmRn27t2L69evo169epg6dSq+/vprjXkcHBxw9uxZZGRkoG3btvDw8MC4ceNgZWUlbbl4k8WLF8Pa2hpNmjRBp06d4OPjg/r162udX09PD0+ePMGAAQNQvXp19OzZE+3bt8esWbMAvD5m5uTJk7hz5w6aN2+OevXqYfr06XBwcMhTPdpMmzYN9evXh4+PD9577z3Y29uja9eu+VrGO++8g8WLF+Prr79G7dq18dNPP2H+/PkFqotIyVRC/P/5kEREREQKxC07REREpGgMO0RERKRoDDtERESkaAw7REREpGgMO0RERKRoDDtERESkaAw7REREpGgMO0RERKRoDDtERESkaAw7REREpGgMO0RERKRoDDtERESkaP8HyIg22xOAOl8AAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["#Dias con mas ventas\n","\n","dias_mas_venta = df['Dia_Semana'].value_counts()\n","dias_mas_venta"],"metadata":{"id":"EZzDUsH1vhC2","executionInfo":{"status":"ok","timestamp":1730330651902,"user_tz":180,"elapsed":368,"user":{"displayName":"","userId":""}},"outputId":"9faaa578-2602-40f2-9056-8308432da1c0","colab":{"base_uri":"https://localhost:8080/","height":335}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Dia_Semana\n","Lunes        9\n","Martes       9\n","Miércoles    9\n","Jueves       9\n","Viernes      8\n","Sábado       8\n","Domingo      8\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Dia_Semana</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Lunes</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Martes</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Miércoles</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Jueves</th>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Viernes</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Sábado</th>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Domingo</th>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np"],"metadata":{"id":"zU2Vy1ydvoXZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# prompt: crear un grafico de matplotlib de mi dias_mas_venta\n","\n","plt.figure(figsize=(10, 6))  # Ajusta el tamaño de la figura si lo deseas\n","dias_mas_venta.plot(kind='bar', color='skyblue')\n","plt.xlabel('Día de la semana')\n","plt.ylabel('Número de ventas')\n","plt.title('Días con más ventas')\n","plt.xticks(rotation=0)  # Rota las etiquetas del eje x para mejor legibilidad\n","plt.show()"],"metadata":{"id":"1_BWg_r8wYH6","executionInfo":{"status":"ok","timestamp":1730331102348,"user_tz":180,"elapsed":1276,"user":{"displayName":"","userId":""}},"outputId":"084ab098-a675-4bec-f2a8-ea02dc9724e1","colab":{"base_uri":"https://localhost:8080/","height":632}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df2 = pd.read_csv(\"/content/drive/MyDrive/CURSO IA/Analisis Exploratorio y visualizaciON/Electric_Vehicle_Population_Data.csv\")\n","df2.head()"],"metadata":{"id":"qb7dWatIqvsR","executionInfo":{"status":"ok","timestamp":1730331340897,"user_tz":180,"elapsed":1142,"user":{"displayName":"","userId":""}},"outputId":"0b9b41a5-1c8e-465a-d3dd-9164a2237f94","colab":{"base_uri":"https://localhost:8080/","height":694}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   VIN (1-10)    County       City State  Postal Code  Model Year       Make  \\\n","0  JTMAB3FV3P    Kitsap    Seabeck    WA      98380.0        2023     TOYOTA   \n","1  1N4AZ1CP6J    Kitsap  Bremerton    WA      98312.0        2018     NISSAN   \n","2  5YJ3E1EA4L      King    Seattle    WA      98101.0        2020      TESLA   \n","3  1N4AZ0CP8E      King    Seattle    WA      98125.0        2014     NISSAN   \n","4  1G1FX6S00H  Thurston       Yelm    WA      98597.0        2017  CHEVROLET   \n","\n","        Model                   Electric Vehicle Type  \\\n","0  RAV4 PRIME  Plug-in Hybrid Electric Vehicle (PHEV)   \n","1        LEAF          Battery Electric Vehicle (BEV)   \n","2     MODEL 3          Battery Electric Vehicle (BEV)   \n","3        LEAF          Battery Electric Vehicle (BEV)   \n","4     BOLT EV          Battery Electric Vehicle (BEV)   \n","\n","  Clean Alternative Fuel Vehicle (CAFV) Eligibility  Electric Range  \\\n","0           Clean Alternative Fuel Vehicle Eligible            42.0   \n","1           Clean Alternative Fuel Vehicle Eligible           151.0   \n","2           Clean Alternative Fuel Vehicle Eligible           266.0   \n","3           Clean Alternative Fuel Vehicle Eligible            84.0   \n","4           Clean Alternative Fuel Vehicle Eligible           238.0   \n","\n","   Base MSRP  Legislative District  DOL Vehicle ID  \\\n","0        0.0                  35.0       240684006   \n","1        0.0                  35.0       474183811   \n","2        0.0                  43.0       113120017   \n","3        0.0                  46.0       108188713   \n","4        0.0                  20.0       176448940   \n","\n","                  Vehicle Location  \\\n","0  POINT (-122.8728334 47.5798304)   \n","1  POINT (-122.6961203 47.5759584)   \n","2  POINT (-122.3340795 47.6099315)   \n","3    POINT (-122.304356 47.715668)   \n","4  POINT (-122.5715761 46.9095798)   \n","\n","                               Electric Utility  2020 Census Tract  \n","0                        PUGET SOUND ENERGY INC       5.303509e+10  \n","1                        PUGET SOUND ENERGY INC       5.303508e+10  \n","2  CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)       5.303301e+10  \n","3  CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)       5.303300e+10  \n","4                        PUGET SOUND ENERGY INC       5.306701e+10  "],"text/html":["\n","  <div id=\"df-d957001c-7f9f-4c72-b9e5-173f2945a739\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VIN (1-10)</th>\n","      <th>County</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Postal Code</th>\n","      <th>Model Year</th>\n","      <th>Make</th>\n","      <th>Model</th>\n","      <th>Electric Vehicle Type</th>\n","      <th>Clean Alternative Fuel Vehicle (CAFV) Eligibility</th>\n","      <th>Electric Range</th>\n","      <th>Base MSRP</th>\n","      <th>Legislative District</th>\n","      <th>DOL Vehicle ID</th>\n","      <th>Vehicle Location</th>\n","      <th>Electric Utility</th>\n","      <th>2020 Census Tract</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>JTMAB3FV3P</td>\n","      <td>Kitsap</td>\n","      <td>Seabeck</td>\n","      <td>WA</td>\n","      <td>98380.0</td>\n","      <td>2023</td>\n","      <td>TOYOTA</td>\n","      <td>RAV4 PRIME</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>42.0</td>\n","      <td>0.0</td>\n","      <td>35.0</td>\n","      <td>240684006</td>\n","      <td>POINT (-122.8728334 47.5798304)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>5.303509e+10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1N4AZ1CP6J</td>\n","      <td>Kitsap</td>\n","      <td>Bremerton</td>\n","      <td>WA</td>\n","      <td>98312.0</td>\n","      <td>2018</td>\n","      <td>NISSAN</td>\n","      <td>LEAF</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>151.0</td>\n","      <td>0.0</td>\n","      <td>35.0</td>\n","      <td>474183811</td>\n","      <td>POINT (-122.6961203 47.5759584)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>5.303508e+10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5YJ3E1EA4L</td>\n","      <td>King</td>\n","      <td>Seattle</td>\n","      <td>WA</td>\n","      <td>98101.0</td>\n","      <td>2020</td>\n","      <td>TESLA</td>\n","      <td>MODEL 3</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>266.0</td>\n","      <td>0.0</td>\n","      <td>43.0</td>\n","      <td>113120017</td>\n","      <td>POINT (-122.3340795 47.6099315)</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>5.303301e+10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1N4AZ0CP8E</td>\n","      <td>King</td>\n","      <td>Seattle</td>\n","      <td>WA</td>\n","      <td>98125.0</td>\n","      <td>2014</td>\n","      <td>NISSAN</td>\n","      <td>LEAF</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>84.0</td>\n","      <td>0.0</td>\n","      <td>46.0</td>\n","      <td>108188713</td>\n","      <td>POINT (-122.304356 47.715668)</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>5.303300e+10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1G1FX6S00H</td>\n","      <td>Thurston</td>\n","      <td>Yelm</td>\n","      <td>WA</td>\n","      <td>98597.0</td>\n","      <td>2017</td>\n","      <td>CHEVROLET</td>\n","      <td>BOLT EV</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>238.0</td>\n","      <td>0.0</td>\n","      <td>20.0</td>\n","      <td>176448940</td>\n","      <td>POINT (-122.5715761 46.9095798)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>5.306701e+10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d957001c-7f9f-4c72-b9e5-173f2945a739')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d957001c-7f9f-4c72-b9e5-173f2945a739 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d957001c-7f9f-4c72-b9e5-173f2945a739');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cd27cb60-ca83-4926-9985-0e3a494fdf00\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cd27cb60-ca83-4926-9985-0e3a494fdf00')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cd27cb60-ca83-4926-9985-0e3a494fdf00 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["df2.info()"],"metadata":{"id":"xmvTU2wGrN_B","executionInfo":{"status":"ok","timestamp":1730331590060,"user_tz":180,"elapsed":366,"user":{"displayName":"","userId":""}},"outputId":"c06d5c64-1ddd-4029-b5d5-6e772a2c0f96","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 205439 entries, 0 to 205438\n","Data columns (total 17 columns):\n"," #   Column                                             Non-Null Count   Dtype  \n","---  ------                                             --------------   -----  \n"," 0   VIN (1-10)                                         205439 non-null  object \n"," 1   County                                             205436 non-null  object \n"," 2   City                                               205436 non-null  object \n"," 3   State                                              205439 non-null  object \n"," 4   Postal Code                                        205436 non-null  float64\n"," 5   Model Year                                         205439 non-null  int64  \n"," 6   Make                                               205439 non-null  object \n"," 7   Model                                              205438 non-null  object \n"," 8   Electric Vehicle Type                              205439 non-null  object \n"," 9   Clean Alternative Fuel Vehicle (CAFV) Eligibility  205439 non-null  object \n"," 10  Electric Range                                     205431 non-null  float64\n"," 11  Base MSRP                                          205431 non-null  float64\n"," 12  Legislative District                               204997 non-null  float64\n"," 13  DOL Vehicle ID                                     205439 non-null  int64  \n"," 14  Vehicle Location                                   205431 non-null  object \n"," 15  Electric Utility                                   205436 non-null  object \n"," 16  2020 Census Tract                                  205436 non-null  float64\n","dtypes: float64(5), int64(2), object(10)\n","memory usage: 26.6+ MB\n"]}]},{"cell_type":"code","source":["tesla_cars = df2[df2['Make'] == 'TESLA']\n","num_tesla_cars = len(tesla_cars)\n","print(f\"Hay {num_tesla_cars} autos Tesla en el dataset.\")\n"],"metadata":{"id":"FhLAXYPlrWVO","executionInfo":{"status":"ok","timestamp":1730330004573,"user_tz":180,"elapsed":369,"user":{"displayName":"","userId":""}},"outputId":"990cc50e-e698-4cd7-b78f-6f8c2d92579a","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hay 90318 autos Tesla en el dataset.\n"]}]},{"cell_type":"code","source":["nissan_cars = df2.groupby(['County', 'Make'])['Make'].count()\n","nissan_cars"],"metadata":{"id":"PKuJui_mtKBq","executionInfo":{"status":"ok","timestamp":1730332107295,"user_tz":180,"elapsed":565,"user":{"displayName":"","userId":""}},"outputId":"3799c746-1f3d-443a-a4b8-a7aa617e3e0d","colab":{"base_uri":"https://localhost:8080/","height":489}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["County  Make      \n","Ada     TESLA         2\n","Adams   BMW           4\n","        CADILLAC      2\n","        CHEVROLET     6\n","        CHRYSLER      1\n","                     ..\n","Yolo    HYUNDAI       1\n","        TESLA         1\n","        VOLKSWAGEN    1\n","York    TESLA         1\n","Yuba    TESLA         1\n","Name: Make, Length: 1327, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Make</th>\n","    </tr>\n","    <tr>\n","      <th>County</th>\n","      <th>Make</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Ada</th>\n","      <th>TESLA</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">Adams</th>\n","      <th>BMW</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>CADILLAC</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>CHEVROLET</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>CHRYSLER</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">Yolo</th>\n","      <th>HYUNDAI</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>TESLA</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>VOLKSWAGEN</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>York</th>\n","      <th>TESLA</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Yuba</th>\n","      <th>TESLA</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1327 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["\n","# DataFrame de ejemplo\n","data = {'Dia': ['Lunes', 'Martes', 'Lunes', 'Martes', 'Lunes'],\n","        'Producto': ['Manzana', 'Banana', 'Manzana', 'Naranja', 'Banana'],\n","        'Ventas': [10, 5, 12, 8, 7]}\n","df = pd.DataFrame(data)\n","\n","# Agrupar por 'Dia' y 'Producto'\n","grouped = df.groupby(['Dia', 'Producto'])\n","\n","# Contar las ventas en cada grupo\n","ventas_por_dia_producto = grouped['Ventas'].sum()\n","\n","print(ventas_por_dia_producto)"],"metadata":{"id":"o3ZpCM1W0SpN","executionInfo":{"status":"ok","timestamp":1730331927456,"user_tz":180,"elapsed":328,"user":{"displayName":"","userId":""}},"outputId":"feb995bc-5033-4bb2-a386-c8280026177a","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Dia     Producto\n","Lunes   Banana       7\n","        Manzana     22\n","Martes  Banana       5\n","        Naranja      8\n","Name: Ventas, dtype: int64\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1730332353777}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}